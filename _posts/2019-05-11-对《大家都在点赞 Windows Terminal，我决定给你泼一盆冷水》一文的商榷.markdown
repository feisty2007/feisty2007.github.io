---
layout: post
title:	"对《大家都在点赞 Windows Terminal，我决定给你泼一盆冷水》一文的商榷"
date:	2019-05-08 18:46:00 +0800 
categories:	观点 linuxcn 
tags:	[linuxcn,微软,Windows,终端]
---


![](/Asserts/Images/album/201905/08/184905be6c46zcbs6vv43n.png)


### 原文观点


今日 Linux 中国发布了一篇文章 《[大家都在点赞 Windows Terminal，我决定给你泼一盆冷水](/article-10828-1.html)》 。该文主要观点引用如下：


* Windows Terminal 是一个套在 Windows 操作系统原本的 CMD、Powershell、Windows Subsystem for Linux（WSL）之上的一个界面更加漂亮、功能更加强大的终端工具。严格来说，它是套在 CMD 、Powershell 之上的一个终端。
* 它也只是一个终端而已，而不是一个更加好用的 Shell。
* Windows 用户所吐槽的命令行不好用不在于其表面，而在于其没有一个足够好用的 Shell。
* 看起来，Windows Terminal 和 WSL 的结合，已经非常完美了，但作为一个 Shell 来用的话，又显的过于笨重。
* WSL 无论做的再怎么好，无法摆脱它只是一个运行于 Windows 系统中附属的子系统。无论 WSL 做的再好，本质上并没有比虚拟机做的更多。
* 作为生态的打造者，微软真正可以做好的是，打造一个能够在体验和生态上与 Unix Shell 一致的 Shell，或者是干脆提供 Bash、Zsh 等常用 Shell 的原生支持（WSL 虽然支持 Bash、Zsh等，但依然是需要先进入 WSL 才能使用，但你可以畅想一下，如果 CMD 变成了 Bash，会是什么样的呢？)。
* 对于广大使用 Windows 开发的用户来说，一个闪闪发亮的、现代化的、功能强大的终端固然很好，但好的终端只不过是锦上添花之举，而一个强大好用的 Shell 才是真正能够雪中送炭的东西，只有一个足够好用的 Shell，才能成为 Windows 命令行世界的救世主。


关于原文更完整的观点，请参阅原文。这里针对原文观点和表达一些不同意见的商榷。


### Terminal 与 Shell


诚如原文所说，Windows Terminal 其实是一个窗口而已，真正执行的是里面的软件，但是 Windows Terminal 并不如原文说的那么一无是处。众所周知 CMD、PowerShell 默认进入以后是没有标签的，想要使用多个只能多开窗口，管理起来不如够方便，而且配色也是影响使用者快速定位问题的一个重要指标。而这次的 Windows Terminal 不但解决这些问题，还能够支持 emoji，可大大提升在里面所运行的程序的使用体验。


再来说说什么是 shell ？一个 shell 是提供用户与操作系统交互的界面/入口，当我们在命令行中输入各种命令时，其实就是在执行一个应用程序，shell 将这些程序送往内核进行执行，所以最终还是要归到内核的系统调用，此外广义上的 shell 其实还包括了图形界面。


让我们来看看第一个点：



> 
> * Windows Terminal 是一个套在 Windows 操作系统原本的 CMD、Powershell、Windows Subsystem for Linux（WSL）之上的一个界面更加漂亮、功能更加强大的终端工具。严格来说，它是套在 CMD 、Powershell 之上的一个终端。
> 
> 
> 


Windows Terminal 准确来说就是一个支持配色的更加现代的终端入口，也不能说是嵌套什么 CMD、PowerShell、WSL，你想怎么使用它取决于你想进入什么样的命令行解释器。举个 Linux 下的例子就是我可以在 `konsole` 下使用 fish、zsh、bash 等 shell 解释器。


### 更好用的 shell？



> 
> * 它也只是一个终端而已，而不是一个更加好用的 Shell。
> * Windows 用户所吐槽的命令行不好用不在于其表面，而在于其没有一个足够好用的 Shell。
> * 看起来，Windows Terminal 和 WSL 的结合，已经非常完美了，但作为一个 Shell 来用的话，又显的过于笨重。
> 
> 
> 


关于这里，我觉得原文作者忽视了 Shell 与 Terminal 的区别。Shell 作为一个命令解释器，必然有自己的语法。而 Linux 生态系统中已经很好用的 shell 就有 fish、zsh、bash 等，但是这些语法也不是所有都兼容的，而且一个好用的 shell 一般只是用户感觉上的东西，没有很明确的指标。Windows 用户在有了 WSL 之后可以使用任何 Linux 已经有的 shell 解释器，这其实已经足够解决问题了，毕竟这些工具的改进是为了吸引 Linux 平台上的开发者，而不是为了一个毫无经验的小白准备的。


此外，原文作者提到的 Windows Terminal 与 WSL（搭载完整内核） 结合作为 shell 使用的话，无异于高射炮打蚊子。这点我也是强烈反对的，首先 shell 只是一个命令解释器，它其实不负责命令的执行，最终所有的程序都要传递给系统调用，如果底层的系统调用不支持，那么该 shell 脚本也是无法执行的（内核不会有反应、或者报错），所以你要使用 shell，那么必须要求有底层内核的支持，这不是什么高射炮打不打蚊子的事，而是你必须要知道其实 shell 它自己本身就是个解释器，没有别的特异功能而已。


一个更好用的 shell 也许是值得吸引人的，但是其实 shell 的语法也不见得多好用，很多反人类的，只是我们已经学习接受了这种语法所以认可它。另一个方面是历史问题，要想你写的脚本一次编写处处执行，那么最好就是 bash 兼容了，否则别人为了执行你的特殊语法，还要装一个能读懂你的 shell 语法的解释器。


### wsl 与虚拟机？



> 
> * WSL 无论做的再怎么好，无法摆脱它只是一个运行于 Windows 系统中附属的子系统。无论 WSL 做的再好，本质上并没有比虚拟机做的更多。
> 
> 
> 


我其实觉得这句话没有道理，为什么这样说呢，确实 WSL 不会比虚拟机做的更多，因为你虚拟机安装的是一个完整的操作系统，但是 WSL 优势是什么？


WSL 的优势就是不需要虚拟机，你便可以使用大部分 Linux 的生态，这是向开发人员示好。而且 WSL 不需要长期运行一个虚拟机，在 WSL1 的时候，你实际执行应用 WSL 会把系统调用转成 NT 系统调用。而 WSL2 将包含完整 Linux 内核，还将支持 Docker（此处无法得知它具体的实现，不做推测）。WSL1 的限制很多，使用起来不是特别方便，这个有使用过的朋友应该很有体会，但是 WSL2 既然能运行 Docker，那么有了 Docker 我就有了一切。


### 生态体验？



> 
> * 作为生态的打造者，微软真正可以做好的是，打造一个能够在体验和生态上与 Unix Shell 一致的 Shell，或者是干脆提供 Bash、Zsh 等常用 Shell 的原生支持（WSL 虽然支持 Bash、Zsh等，但依然是需要先进入 WSL 才能使用，但你可以畅想一下，如果 CMD 变成了 Bash，会是什么样的呢？)。
> * 对于广大使用 Windows 开发的用户来说，一个闪闪发亮的、现代化的、功能强大的终端固然很好，但好的终端只不过是锦上添花之举，而一个强大好用的 Shell 才是真正能够雪中送炭的东西，只有一个足够好用的 Shell，才能成为 Windows 命令行世界的救世主。
> 
> 
> 


这两个观点也是不攻自破的，我既然可以使用 WSL，那么我本身就拥有了 Linux 的生态。如果是希望写 bat 批处理而能有 bash、zsh 的这些体验，那么确实是需要一个新的 shell 满足 Unix Shell 语法，再来解释 Windows 下的命令行，可是这其实也是不需要的。因为本人发现在 WSL 里面执行一个 exe 程序是完全可行的，因此可以用这种 shell 语法去编写我的脚本，oh nice！！体验非常统一啊有没有？



```
locez@Lenovo-PC~> pycharm64.exe  ### 会启动我的 pycharm
locez@Lenovo-PC~> git.exe | xargs echo
```

### 我的观点


我本人认为，微软的这些拥抱 Linux 的举措，其实就是在吸引 Linux 上的开发者而已，开发者想要的工具，如果能够在 Windows 下就能直接使用，那对我们这些开发人员来说无外乎是喜报。工具多一个总不是坏事，但是如果它真的值得使用，那么用户一定会增加，这就是需要微软来做的事情了。我本人是双系统用户，在打游戏娱乐方面我一定会使用 Windows，做开发写代码我会切换到 Linux，曾经写一个很小的软件也是如此。但是后来 WSL 出现了，简单的脚本我可以在 Windows 下就直接完成并且提交，不需要重启系统，然后继续玩我的游戏，美滋滋。


另外就是 Windows Terminal 与 WSL2 的出现会解放我现在系统上的一些工具，例如 git bash、gpg4win 等。如果 WSL2 真的有完整的系统调用，那么我现有的 Windows 上的开发环境便不再需要，专注于游戏娱乐，但是一进 WSL 便是我工作学习的地方。
